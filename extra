Basic JavaScript
Npm
React = 3
Mock API
json-server
React-JWT(Login Logout)-1
React(Github)-1
React-GarphQL-1
React_hooks -1
Basic React Native=1
/////////////////////
Depolyment
-> MERN
-> Docker
-> heroku
-> Nginx
React-Redux =2
Github
Testing
React-Saga -1
React-with-typescript-1
--------NOT--------------
API
GarphQL
Login/Logout

12 application

30

https://code.visualstudio.com/download
https://github.com/Aakashdeveloper
https://nodejs.org/en/


React> is front end framework which help to build single page application
with component based structure.

NPM
> Node package Manager

////////////////////////
Package.json
///////////////////
> starting point of application
> meta data (description, version, packagename, developer,linc)
> packages (local,dev)
> script (start,build,test)

/////////////////
Step to generate package.json
//////////////////
**NodeJs must be install in system
> navigate to the folder using cmd /terminal
> npm init    (initilize npm in your folder)
> Answer all questions
> type yes

/////////////////
Step to install package
//////////////////
> navigate to the folder using cmd /terminal
> npm i packagename

local > local to the folder
      > Add to package.json
      > max package will go local

global> local to the system
      > Not Add to package.json
      > Need admin access
      > only package use to setup/generate will go global

////////////////////////////////React///////////////////////////////

///////////////////////
Step to create React app
///////////////////////
#window 

>>>>One Time in new system<<<<<
> open cmd as admin
> npm i -g create-react-app

>>>>Next all Time in same system<<<<<
> go inside folder where you want app 
> create-react-app appname

#Mac /linux 

>>>>One Time in new system<<<<<
> open terminal
> sudo npm i -g create-react-app

>>>>Next all Time in same system<<<<<
> go inside folder where you want app 
> create-react-app appname

///////////////////////
Step to run React app
///////////////////////
> go inside app folder with cmd
> npm start
> localhost:3000

////////////////


function add(a,b){

}

/////////Component-Type////////////
functional
> light in weight
> dumb component
> we cannot maintain state
> we use for display only

ClassComponent
> heavy in weight
> logical component
> we can maintain state
> use for api call,logic and display

HooksComponent


state  > act like a local variable
       > all data interaction happen through state
       > we can update the value of state
       > each component can have it own state

props
      > use to transfer data from one component to other
      >  we cannot update data of props


map
filter

var 

parent to child > home to footer (props)
child to parent > header to home (props with function)


(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1
(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/1?roomtype=1
(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500
(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) triptype>       https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook


npm i react-router-dom react-tabs react-slick


fetch 
promise


//dummy api
json server

npm i -g json-server

json-server --watch db.json --port 8900

//////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role":"user?"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

https://www.youtube.com/c/DeveloperFunnel/videos

npm i apollo-boost apollo-graphql graphql react-apollo 

npm i -g create-react-native-app
create-react-native-app appname
 npm run web


 npm i redux react-redux redux-logger